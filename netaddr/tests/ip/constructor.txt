=IP Constructor Stress Tests=

Copyright (c) 2008-2009, David P. D. Moss. All rights reserved.

{{{

>>> from netaddr import *

>>> IP('192.0.2.0/24')
IP('192.0.2.0/24')

>>> IP('192.0.2.0/24', 4)
IP('192.0.2.0/24')

>>> IP('192.0.2.0/255.255.255.0')
IP('192.0.2.0/24')

>>> IP('192.0.2.0/0.0.0.255')
IP('192.0.2.0/24')

>>> IP(IP('192.0.2.0/24', 4))
IP('192.0.2.0/24')

>>> IP(IP('192.0.2.0/24'))
IP('192.0.2.0/24')

>>> IP(IP('::192.0.2.0/120', 6))
IP('::192.0.2.0/120')

>>> IP(IP('192.0.2.0/24'), 6)
Traceback (most recent call last):
...
ValueError: cannot switch IP versions using copy constructor!

>>> IP(3221225984)
IP('192.0.2.0')

>>> IP(3221225984, 6)
IP('::192.0.2.0')

>>> IP(0xffffffff)
IP('255.255.255.255')

>>> IP(0xffffffff, 6)
IP('::255.255.255.255')

>>> IP(0x1ffffffff)
IP('::1:ffff:ffff')

>>> IP('::ffff:0.0.0.0')
IP('::ffff:0.0.0.0')

>>> IP('::192.0.2.0/120')
IP('::192.0.2.0/120')

>>> IP('::192.0.2.0/120', 6)
IP('::192.0.2.0/120')

>>> ip = IP(0xffffff00)
>>> ip.is_netmask()
True
>>> ip.is_hostmask()
False

>>> ip = IP(0xff)
>>> ip.is_netmask()
False
>>> ip.is_hostmask()
True

}}}

Less well known inet_aton compatible IPv4 address formatting is supported.

{{{

#	Hexadecmimal.
>>> IP('0x7f.0x1')
IP('127.0.0.1')

>>> IP('0x7f.0x0.0x0.0x1')
IP('127.0.0.1')

#	Octal
>>> IP('0177.01')
IP('127.0.0.1')

#	Mixed.
>>> IP('0x7f.0.01')
IP('127.0.0.1')

#	Partial addresses.
>>> IP('127')
IP('0.0.0.127')

>>> IP('127')
IP('0.0.0.127')

}}}
