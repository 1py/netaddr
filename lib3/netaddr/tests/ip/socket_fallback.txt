=Socket Fallback Module Tests=

Copyright (c) 2008-2010, David P. D. Moss. All rights reserved.

{{{

>>> from netaddr.fbsocket import *

}}}

IPv6 '::' compression algorithm tests.

{{{

>>> inet_ntop(AF_INET6, inet_pton(AF_INET6, '0:0:0:0:0:0:0:0'))
'::'

>>> inet_ntop(AF_INET6, inet_pton(AF_INET6, '0:0:0:0:0:0:0:A'))
'::a'

>>> inet_ntop(AF_INET6, inet_pton(AF_INET6, 'A:0:0:0:0:0:0:0'))
'a::'

>>> inet_ntop(AF_INET6, inet_pton(AF_INET6, 'A:0:A:0:0:0:0:0'))
'a:0:a::'

>>> inet_ntop(AF_INET6, inet_pton(AF_INET6, 'A:0:0:0:0:0:0:A'))
'a::a'

>>> inet_ntop(AF_INET6, inet_pton(AF_INET6, '0:A:0:0:0:0:0:A'))
'0:a::a'

>>> inet_ntop(AF_INET6, inet_pton(AF_INET6, 'A:0:A:0:0:0:0:A'))
'a:0:a::a'

>>> inet_ntop(AF_INET6, inet_pton(AF_INET6, '0:0:0:A:0:0:0:A'))
'::a:0:0:0:a'

>>> inet_ntop(AF_INET6, inet_pton(AF_INET6, '0:0:0:0:A:0:0:A'))
'::a:0:0:a'

>>> inet_ntop(AF_INET6, inet_pton(AF_INET6, 'A:0:0:0:0:A:0:A'))
'a::a:0:a'

>>> inet_ntop(AF_INET6, inet_pton(AF_INET6, 'A:0:0:A:0:0:A:0'))
'a::a:0:0:a:0'

>>> inet_ntop(AF_INET6, inet_pton(AF_INET6, 'A:0:A:0:A:0:A:0'))
'a:0:a:0:a:0:a:0'

>>> inet_ntop(AF_INET6, inet_pton(AF_INET6, '0:A:0:A:0:A:0:A'))
'0:a:0:a:0:a:0:a'

>>> inet_ntop(AF_INET6, inet_pton(AF_INET6, '1080:0:0:0:8:800:200C:417A'))
'1080::8:800:200c:417a'

>>> inet_ntop(AF_INET6, inet_pton(AF_INET6, 'FEDC:BA98:7654:3210:FEDC:BA98:7654:3210'))
'fedc:ba98:7654:3210:fedc:ba98:7654:3210'

}}}

IPv4 failure tests

{{{

>>> inet_ntoa(1)
Traceback (most recent call last):
...
TypeError: string type expected, not <class 'int'>


>>> inet_ntoa('\x00')
Traceback (most recent call last):
...
ValueError: invalid length of packed IP address string

>>> inet_aton('0x0')
b'\x00\x00\x00\x00'

>>> inet_aton('010')
b'\x08\x00\x00\x00'

}}}

Legacy mode enabled - using `socket.inet_aton()` - netaddr default

{{{

>>> import netaddr

>>> from netaddr import IPAddress

>>> IPAddress('012.0.0.001')
IPAddress('10.0.0.1')

}}}

Legacy mode enabled - using `socket.inet_pton(AF_INET, ...)`

{{{

>>> import netaddr

>>> netaddr.IPAddress('012.0.0.001', legacy_mode=False)
Traceback (most recent call last):
...
netaddr.core.AddrFormatError: failed to detect IP version: '012.0.0.001'

}}}

Check IPv4 compatible/mapped IPv6 errors

{{{
>>> IPAddress('::012.0.0.001')
Traceback (most recent call last):
...
netaddr.core.AddrFormatError: failed to detect IP version: '::012.0.0.001'

>>> IPAddress('::ffff:012.0.0.001')
Traceback (most recent call last):
...
netaddr.core.AddrFormatError: failed to detect IP version: '::ffff:012.0.0.001'

>>> IPAddress('::ffff:012.0.0.0x7f')
Traceback (most recent call last):
...
netaddr.core.AddrFormatError: failed to detect IP version: '::ffff:012.0.0.0x7f'

}}}
